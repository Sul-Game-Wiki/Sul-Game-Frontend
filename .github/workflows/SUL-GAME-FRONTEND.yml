name: SUL-GAME-FRONTEND

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Decode and save keystore
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
      run: echo "$KEYSTORE_BASE64" | base64 -d > app/release-key.jks

    - name: Set environment variables
      run: |
        echo "ANDROID_COMPILE_SDK=34" >> $GITHUB_ENV
        echo "ANDROID_TARGET_SDK=34" >> $GITHUB_ENV
        echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
        echo "STORE_PASSWORD=${{ secrets.STORE_PASSWORD }}" >> $GITHUB_ENV

    - name: Update Gradle wrapper and dependencies
      run: |
        ./gradlew wrapper --gradle-version 8.1.1
        ./gradlew dependencies --refresh-dependencies

    - name: Build with Gradle
      run: ./gradlew bundleRelease assembleRelease

    - name: Rename AAB and APK files
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        DATE=$(date +'%y%m%d')
        mv app/build/outputs/bundle/release/app-release.aab app/build/outputs/bundle/release/sul-game-${DATE}-${COMMIT_HASH}.aab
        mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/sul-game-${DATE}-${COMMIT_HASH}.apk

    - name: Download JSON file from Synology NAS
      env:
        SYNOSSH_HOST: ${{ secrets.SYNOSSH_HOST }}
        SYNOSSH_USERNAME: ${{ secrets.SYNOSSH_USERNAME }}
        SYNOSSH_PASSWORD: ${{ secrets.SYNOSSH_PASSWORD }}
      run: |
        sshpass -p $SYNOSSH_PASSWORD scp -o StrictHostKeyChecking=no -P 2022 $SYNOSSH_USERNAME@$SYNOSSH_HOST:/volume1/web/sul-game/downloads/sul-game-files.json app/build/outputs/bundle/release/sul-game-files.json

    - name: Update JSON file
      run: |
        COMMIT_HASH=$(git rev-parse --short HEAD)
        DATE=$(date +'%y%m%d')
        FILE_PATH_AAB="app/build/outputs/bundle/release/sul-game-${DATE}-${COMMIT_HASH}.aab"
        FILE_PATH_APK="app/build/outputs/apk/release/sul-game-${DATE}-${COMMIT_HASH}.apk"
        FILE_SIZE_AAB=$(stat -c%s "$FILE_PATH_AAB")
        FILE_SIZE_APK=$(stat -c%s "$FILE_PATH_APK")
        MODIFIED_TIME=$(date -r "$FILE_PATH_AAB" +"%Y-%m-%d %H:%M:%S")
        JSON_PATH="app/build/outputs/bundle/release/sul-game-files.json"
        
        if [ ! -f $JSON_PATH ]; then
          echo '{"files": []}' > $JSON_PATH
        fi
        
        EXISTING_JSON=$(cat $JSON_PATH)
        
        UPDATED_JSON=$(echo "$EXISTING_JSON" | jq --arg name "sul-game-${DATE}-${COMMIT_HASH}.aab" --arg size "$FILE_SIZE_AAB" --arg mtime "$MODIFIED_TIME" \
          '.files += [{"name": $name, "size": $size, "mtime": $mtime}]')
        
        UPDATED_JSON=$(echo "$UPDATED_JSON" | jq --arg name "sul-game-${DATE}-${COMMIT_HASH}.apk" --arg size "$FILE_SIZE_APK" --arg mtime "$MODIFIED_TIME" \
          '.files += [{"name": $name, "size": $size, "mtime": $mtime}]')
        
        echo "$UPDATED_JSON" > $JSON_PATH

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sul-game
        path: |
          app/build/outputs/bundle/release/sul-game-*.aab
          app/build/outputs/apk/release/sul-game-*.apk
          app/build/outputs/bundle/release/sul-game-files.json

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: sul-game
        path: app/build/outputs/

    - name: Upload AAB, APK and JSON to Synology NAS
      env:
        SYNOSSH_HOST: ${{ secrets.SYNOSSH_HOST }}
        SYNOSSH_USERNAME: ${{ secrets.SYNOSSH_USERNAME }}
        SYNOSSH_PASSWORD: ${{ secrets.SYNOSSH_PASSWORD }}
      run: |
        sshpass -p $SYNOSSH_PASSWORD scp -o StrictHostKeyChecking=no -P 2022 \
          app/build/outputs/bundle/release/sul-game-*.aab \
          app/build/outputs/apk/release/sul-game-*.apk \
          app/build/outputs/bundle/release/sul-game-files.json \
          $SYNOSSH_USERNAME@$SYNOSSH_HOST:/volume1/web/sul-game/downloads/
